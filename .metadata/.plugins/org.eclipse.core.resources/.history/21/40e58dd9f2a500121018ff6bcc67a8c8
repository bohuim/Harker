import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Iterator;
import java.util.StringTokenizer;


/**
 * 
 * @author Dennis Moon
 * @version Apr 15, 2013
 * 
 * @Revision
 *     Apr 15, 2013 - created and finished
 */
public class IteratorTester
{
    /**
    * <b>Method: </b>main</br> 
    * <b>Usage: </b>{@code }</br>
    * -------------------------------</br>
    * Has a BufferedReader that takes input from System.in through InputStreamReader. </br>
    * A new set is created and an iterator is initially set as null. </br>
    * For an undecided amount of times, input is split from " " using StringTokenizers and commands are executed accordingly. </br></br>
    * ex) "add 100" adds 100 in ascending order to the set, "it" returns a new iterator
    * 
    * @param args - arguments to run a main thread
    * @throws IOException when I/O causes problems
    */
   public static void main(String[] args) throws IOException
   {
       BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
       
       MyHashSet<String> set = new MyHashSet<String>();
       Iterator<String> it = null;
       
       while (true)
       {
           StringTokenizer token = new StringTokenizer(in.readLine());
           String type = token.nextToken();
           String value = "";
           if (token.hasMoreTokens())
               value = token.nextToken();
           
           if (type.equals("contains"))
               System.out.println(set.contains(x));
           else if (type.equals("add"))
               set.add(x);
           else if (type.equals("remove"))
               set.remove(x);
           else if (type.equals("it"))
               it = set.iterator();
           else if (type.equals("next"))
               System.out.println(" " + it.next());
           else if (type.equals("hasNext"))
               System.out.println(" " + it.hasNext());
           else if (type.equals("itRemove"))
               it.remove();
       }
   }
}
